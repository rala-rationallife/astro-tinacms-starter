---
import CustomPicture from "@components/custom-picture.astro";
import Layout from "@layouts/layout.astro";
import { CollectionEntry, getCollection } from "astro:content";
import { compareDesc, format, formatISO } from "date-fns";
import { categories } from "@lib/constants";
import "github-markdown-css/github-markdown-light.css";
import Pagination from "@components/pagination.astro";

interface Props {
  post: CollectionEntry<"blog">;
  url: {
    prev?: string;
    next?: string;
    prevTitle?: string;
    nextTitle?: string;
  };
}

export async function getStaticPaths({}) {
  const blogPosts = await getCollection("blog");
  const sortedBlogPosts = blogPosts.sort((a, b) =>
    compareDesc(a.data.pubDate, b.data.pubDate)
  );
  const numberOfPosts = blogPosts.length;

  return sortedBlogPosts.map((post) => {
    const { slug } = post;
    const currentPage = sortedBlogPosts.findIndex((post) => post.slug === slug);

    const prev =
      currentPage + 1 >= numberOfPosts
        ? {}
        : {
            prevTitle: sortedBlogPosts[currentPage + 1].data.title,
            prev: `/blog/${sortedBlogPosts[currentPage + 1].slug}`,
          };

    const next =
      currentPage - 1 < 0
        ? {}
        : {
            nextTitle: sortedBlogPosts[currentPage - 1].data.title,
            next: `/blog/${sortedBlogPosts[currentPage - 1].slug}`,
          };

    return { params: { slug }, props: { post, url: { ...prev, ...next } } };
  });
}

const { post, url } = Astro.props;
const { Content } = await post.render();

const {
  data: { title, pubDate, image, category, description },
} = post;

const pubDateISO = formatISO(pubDate);
const pubDateJA = format(pubDate, "yyy年MM月dd日");
---

<Layout pageTitle={title} description={description} pageImg={image}>
  <article>
    <CustomPicture src={image} alt={title} />

    <h1>{title}</h1>

    <div class="flex-spacebetween">
      <time datetime={pubDateISO}>{pubDateJA}</time>

      <div class="flex">
        {
          category.map((categorySlug) => {
            const categoryData = categories.find(
              (cat) => cat.categorySlug === categorySlug
            );
            const categoryName = categoryData
              ? categoryData.categoryName
              : "Unknown";
            return (
              <a href={`/blog/category/${categorySlug}`}>{categoryName}</a>
            );
          })
        }
      </div>
    </div>

    <div class="markdown-body large-space">
      <Content components={{ img: CustomPicture }} />
    </div>

    <Pagination {...url} />
  </article>
</Layout>
